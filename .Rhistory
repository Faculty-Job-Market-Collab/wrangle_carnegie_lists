blogdown::hugo_version()
install.packages(c("bit", "broom", "bslib", "callr", "car", "cli", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "dtplyr", "evaluate", "farver", "forcats", "gargle", "generics", "ggplot2", "ggsignif", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "knitr", "lifecycle", "lme4", "lubridate", "maptools", "MatrixModels", "minqa", "modelr", "openssl", "pillar", "pkgload", "processx", "ps", "purrr", "Rcpp", "RcppEigen", "readr", "readxl", "reprex", "rlang", "rmarkdown", "rstudioapi", "rtweet", "rvest", "sass", "scales", "sp", "stringi", "stringr", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "viridisLite", "vroom", "xfun", "yaml"))
setwd("~/Desktop/COVID_Job_Market_19-20")
setwd("~/Desktop/wrangle_carnegie_lists")
#read in data for setup----
library(tidyverse)
library(readxl)
#import carnegie data----
source("code/clean_carn_data.R")
source("code/get_wrangle_uni_functions.R")
#import carnegie data----
source("code/clean_carn_data.R")
#cleaned full Carnegie data set
wierd_inst_data <- read_csv("output/wierd_inst_list2023-03-28.csv")
View(wierd_inst_data)
#import uni list and uni data -- wrangle uni names to sort/join lists
# SETUP ------
library(tidyverse)
library(readxl)
library(fuzzyjoin)
source("code/get_wrangle_uni_functions.R")
#import carnegie data----
source("code/clean_carn_data.R")
#import non-carnegie inst names----
non_carn_inst_data <- read_csv("data/non-carnegie_unis.csv")%>%
select(Institution) %>%
mutate(Institution = str_to_title(Institution),
Institution = str_remove_all(Institution, ",|'"),
Institution = str_replace(Institution, "U\\.? |U$|Univ\\.? |Univ$|Uni\\w*\\b|Uni |Unviersity", "University "),
Institution = str_replace(Institution, "Saint |^St ", "St "),
Institution = str_replace_all(Institution, pattern = "&", replacement = "And"),
Institution = str_replace_all(Institution, pattern = " At | In |,, |/|-|–", replacement = " "),
Institution = str_squish(Institution))
#create master list of inst names
inst_name_list <- rename(non_carn_inst_data, "NAME" = "Institution") %>%
rbind(., carnegie_inst_names)
#import survey uni list (generated by "get_full_inst_data.R")----
full_inst_data <- read_csv("output/full_inst_list_2019-2022_2023-03-17.csv") %>%
filter(!is.na(inst_name))
#list of non-Carnegie institutions
#non_carn_inst <- c("Inc|Associat|Society|Hospital| Lab|Foundation")
#non-inst entries to drop----
drop_list <- c("NA|N A|Na|— Make A Selection —|None|
Post Doc|Postdoc|Lab Moved)|
Unofficial Offer|N/A|General Search)|
Verbal|Completed Phd But Not Employed")
#drop_id_list <- c("701_2019-2020", "55_2019-2020", "17_2020-2021",
#                  "228_2019-2020", "160_2021-2022", "59_2020-2021",
#                  "80_2021-2022", "94_2021-2022", "184_2021-2022",
#                  "224_2021-2022", "249_2021-2022", "103_2020-2021",
#                  "149_2021-2022", "256_2021-2022", "652_2019-2020",
#                  "619_2019-2020", "255_2019-2020", "185_2021-2022")#list of respondents whose responses will need to be handled manually
#clean inst names for all survey responses----
clean_surv_inst <- full_inst_data %>%
#filter(str_detect(inst_name, drop_inst) == FALSE) %>%
#filter(inst_name %not_in% drop_list) %>%
filter(id %not_in% drop_id_list) %>%
filter(!is.null(inst_name)) %>%
filter(!is.na(inst_name)) %>%
mutate(inst_name = str_replace_all(inst_name, "Univerisy|Univerisity|Univeristy|Univeersity|U\\.? |U$|Univ\\.? |Univ$|Uni |Uni$|Unv.*", "University "),
inst_name = str_replace_all(inst_name, "C\\.? |C$|Coll\\w+", "College "),
inst_name = str_replace(inst_name, "Saint |^St ", "St "),
inst_name = str_replace(inst_name, "Lab$", "Laboratory"),
inst_name = str_replace_all(inst_name, pattern = "&", replacement = "And"),
inst_name = str_replace_all(inst_name, "Aandm|AAndM", "A And M"),
inst_name = str_replace_all(inst_name, "Aandt|AAndT", "A And T"),
inst_name = str_remove_all(inst_name, "Both Were | Denton|Two|X[[:digit:]]|[[:digit:]]| Som$| Mentor Cluster Search| Neurotheme Search|In Seattle|,|The |\\.|Campus|Tuscaloosa|\\(|\\(.*Post.*|\\)| (?=,)|@|'|’|Search Results Web Results |Israel"),
inst_name = str_replace_all(inst_name, pattern = " At | In |,, |/|-|–", replacement = " "),
inst_name = str_replace(inst_name, " Or | Od ", " Of "),
inst_name = str_remove_all(inst_name, "Declin.*"),
inst_name = str_remove_all(inst_name, " For Physics Of Complex Systems|Dept.*|(?<!Keck Science) Depart.*|Keck Science Department"),
inst_name = str_remove_all(inst_name, "Interview.*")) %>%
mutate(inst_name = str_replace_all(inst_name, "Univerisy|Univerisity|Univeristy|Univeersity|U\\.? |U$|Univ\\.? |Univ$|Uni |Uni$|Unv.*", "University "),
inst_name = str_replace(inst_name, "C\\.? |C$|Coll\\w+", "College "),
inst_name = str_replace(inst_name, "Saint |^St ", "St "),
inst_name = str_replace_all(inst_name, pattern = "&", replacement = "And"),
inst_name = str_replace_all(inst_name, "Aandm|AAndM", "A And M"),
inst_name = str_replace_all(inst_name, "Aandt|AAndT", "A And T"),
inst_name = str_remove_all(inst_name, "Both Were | Denton|Two|X[[:digit:]]|[[:digit:]]| Som$| Mentor Cluster Search| Neurotheme Search|In Seattle|,|The |\\.|Campus|Tuscaloosa|\\(|\\(.*Post.*|\\)| (?=,)|@|'|’|Search Results Web Results |Israel"),
inst_name = str_replace_all(inst_name, pattern = " At | In |,, |/|-|–", replacement = " "),
inst_name = str_replace(inst_name, " Or | Od ", " Of "), #run the same code twice to fix responses with multiple issues
inst_name = str_squish(inst_name))
#clean inst names for all survey responses----
clean_surv_inst <- full_inst_data %>%
#filter(str_detect(inst_name, drop_inst) == FALSE) %>%
#filter(inst_name %not_in% drop_list) %>%
#filter(id %not_in% drop_id_list) %>%
filter(!is.null(inst_name)) %>%
filter(!is.na(inst_name)) %>%
mutate(inst_name = str_replace_all(inst_name, "Univerisy|Univerisity|Univeristy|Univeersity|U\\.? |U$|Univ\\.? |Univ$|Uni |Uni$|Unv.*", "University "),
inst_name = str_replace_all(inst_name, "C\\.? |C$|Coll\\w+", "College "),
inst_name = str_replace(inst_name, "Saint |^St ", "St "),
inst_name = str_replace(inst_name, "Lab$", "Laboratory"),
inst_name = str_replace_all(inst_name, pattern = "&", replacement = "And"),
inst_name = str_replace_all(inst_name, "Aandm|AAndM", "A And M"),
inst_name = str_replace_all(inst_name, "Aandt|AAndT", "A And T"),
inst_name = str_remove_all(inst_name, "Both Were | Denton|Two|X[[:digit:]]|[[:digit:]]| Som$| Mentor Cluster Search| Neurotheme Search|In Seattle|,|The |\\.|Campus|Tuscaloosa|\\(|\\(.*Post.*|\\)| (?=,)|@|'|’|Search Results Web Results |Israel"),
inst_name = str_replace_all(inst_name, pattern = " At | In |,, |/|-|–", replacement = " "),
inst_name = str_replace(inst_name, " Or | Od ", " Of "),
inst_name = str_remove_all(inst_name, "Declin.*"),
inst_name = str_remove_all(inst_name, " For Physics Of Complex Systems|Dept.*|(?<!Keck Science) Depart.*|Keck Science Department"),
inst_name = str_remove_all(inst_name, "Interview.*")) %>%
mutate(inst_name = str_replace_all(inst_name, "Univerisy|Univerisity|Univeristy|Univeersity|U\\.? |U$|Univ\\.? |Univ$|Uni |Uni$|Unv.*", "University "),
inst_name = str_replace(inst_name, "C\\.? |C$|Coll\\w+", "College "),
inst_name = str_replace(inst_name, "Saint |^St ", "St "),
inst_name = str_replace_all(inst_name, pattern = "&", replacement = "And"),
inst_name = str_replace_all(inst_name, "Aandm|AAndM", "A And M"),
inst_name = str_replace_all(inst_name, "Aandt|AAndT", "A And T"),
inst_name = str_remove_all(inst_name, "Both Were | Denton|Two|X[[:digit:]]|[[:digit:]]| Som$| Mentor Cluster Search| Neurotheme Search|In Seattle|,|The |\\.|Campus|Tuscaloosa|\\(|\\(.*Post.*|\\)| (?=,)|@|'|’|Search Results Web Results |Israel"),
inst_name = str_replace_all(inst_name, pattern = " At | In |,, |/|-|–", replacement = " "),
inst_name = str_replace(inst_name, " Or | Od ", " Of "), #run the same code twice to fix responses with multiple issues
inst_name = str_squish(inst_name))
clean_surv_inst <- clean_surv_inst %>%
mutate(inst_name = map(inst_name, replace_uny),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_abbrv),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_campus),
inst_name = unlist(inst_name),
inst_name = str_to_title(inst_name),
inst_name = str_squish(inst_name)
)
#inst name join----
inst_join <- inst_name_list %>%
mutate(NAME = str_remove_all(NAME, ",")) %>% #ensure no commas
left_join(clean_surv_inst, .,
by = c("inst_name" = "NAME"), keep = TRUE) %>%
select(-id, -inst_type) %>% #option to keep or drop identifying data
distinct()
joined_na_inst <- inst_join %>%
filter(is.na(NAME)) %>%
select(inst_name) %>% distinct()
#identify respondent inst that DID join/exactly match Carnegie names
joined_matches <- inst_join %>%
filter(inst_name == NAME) %>%
distinct()
#fuzzy join----
missing_fuzzy_join <- joined_na_inst %>%
mutate(inst_name = map(inst_name, replace_uny),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_abbrv),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_campus),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = str_squish(inst_name),
) %>% #another attempt to repair names
stringdist_left_join(., inst_name_list,
by = c("inst_name" = "NAME"),
method = "lcs", max_dist = 6
) %>% #use fuzzy join to catch potential mis-spellings, campuses, etc.
distinct()
fuzzy_matches <- missing_fuzzy_join %>%
filter(!is.na(NAME))
View(fuzzy_matches)
#clean inst names for all survey responses----
clean_surv_inst <- full_inst_data %>%
#filter(str_detect(inst_name, drop_inst) == FALSE) %>%
filter(inst_name %not_in% drop_list) %>%
#filter(id %not_in% drop_id_list) %>%
filter(!is.null(inst_name)) %>%
filter(!is.na(inst_name)) %>%
mutate(inst_name = str_replace_all(inst_name, "Univerisy|Univerisity|Univeristy|Univeersity|U\\.? |U$|Univ\\.? |Univ$|Uni |Uni$|Unv.*", "University "),
inst_name = str_replace_all(inst_name, "C\\.? |C$|Coll\\w+", "College "),
inst_name = str_replace(inst_name, "Saint |^St ", "St "),
inst_name = str_replace(inst_name, "Lab$", "Laboratory"),
inst_name = str_replace_all(inst_name, pattern = "&", replacement = "And"),
inst_name = str_replace_all(inst_name, "Aandm|AAndM", "A And M"),
inst_name = str_replace_all(inst_name, "Aandt|AAndT", "A And T"),
inst_name = str_remove_all(inst_name, "Both Were | Denton|Two|X[[:digit:]]|[[:digit:]]| Som$| Mentor Cluster Search| Neurotheme Search|In Seattle|,|The |\\.|Campus|Tuscaloosa|\\(|\\(.*Post.*|\\)| (?=,)|@|'|’|Search Results Web Results |Israel"),
inst_name = str_replace_all(inst_name, pattern = " At | In |,, |/|-|–", replacement = " "),
inst_name = str_replace(inst_name, " Or | Od ", " Of "),
inst_name = str_remove_all(inst_name, "Declin.*"),
inst_name = str_remove_all(inst_name, " For Physics Of Complex Systems|Dept.*|(?<!Keck Science) Depart.*|Keck Science Department"),
inst_name = str_remove_all(inst_name, "Interview.*")) %>%
mutate(inst_name = str_replace_all(inst_name, "Univerisy|Univerisity|Univeristy|Univeersity|U\\.? |U$|Univ\\.? |Univ$|Uni |Uni$|Unv.*", "University "),
inst_name = str_replace(inst_name, "C\\.? |C$|Coll\\w+", "College "),
inst_name = str_replace(inst_name, "Saint |^St ", "St "),
inst_name = str_replace_all(inst_name, pattern = "&", replacement = "And"),
inst_name = str_replace_all(inst_name, "Aandm|AAndM", "A And M"),
inst_name = str_replace_all(inst_name, "Aandt|AAndT", "A And T"),
inst_name = str_remove_all(inst_name, "Both Were | Denton|Two|X[[:digit:]]|[[:digit:]]| Som$| Mentor Cluster Search| Neurotheme Search|In Seattle|,|The |\\.|Campus|Tuscaloosa|\\(|\\(.*Post.*|\\)| (?=,)|@|'|’|Search Results Web Results |Israel"),
inst_name = str_replace_all(inst_name, pattern = " At | In |,, |/|-|–", replacement = " "),
inst_name = str_replace(inst_name, " Or | Od ", " Of "), #run the same code twice to fix responses with multiple issues
inst_name = str_squish(inst_name))
clean_surv_inst <- clean_surv_inst %>%
mutate(inst_name = map(inst_name, replace_uny),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_abbrv),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_campus),
inst_name = unlist(inst_name),
inst_name = str_to_title(inst_name),
inst_name = str_squish(inst_name)
)
#create master list of inst names
inst_name_list <- rename(non_carn_inst_data, "NAME" = "Institution") %>%
mutate(NAME = str_remove_all(NAME, ","), #ensure no commas
NAME = str_to_title(NAME),
NAME = str_squish(NAME)) %>%
rbind(., carnegie_inst_names)
inst_join <- inst_name_list %>%
left_join(clean_surv_inst, .,
by = c("inst_name" = "NAME"), keep = TRUE) %>%
select(-id, -inst_type) %>% #option to keep or drop identifying data
distinct()
#identify respondent inst that did not join/exactly match Carnegie names
joined_na_inst <- inst_join %>%
filter(is.na(NAME)) %>%
select(inst_name) %>% distinct()
#identify respondent inst that DID join/exactly match Carnegie names
joined_matches <- inst_join %>%
filter(inst_name == NAME) %>%
distinct()
#fuzzy join----
missing_fuzzy_join <- joined_na_inst %>%
mutate(inst_name = map(inst_name, replace_uny),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_abbrv),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_campus),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = str_squish(inst_name),
) %>% #another attempt to repair names
stringdist_left_join(., inst_name_list,
by = c("inst_name" = "NAME"),
method = "lcs", max_dist = 6
) %>% #use fuzzy join to catch potential mis-spellings, campuses, etc.
distinct()
fuzzy_matches <- missing_fuzzy_join %>%
filter(!is.na(NAME))
View(fuzzy_matches)
#list of correct matches from fuzzy join
slice_list <- c(4, 9, 11:14, 71, 76:80, 82, 88, 89,
100:127, 129, 131:138, 141:143, 145:147,
158, 160:162, 174:176, 178:181, 184,
185, 187:189, 199, 200, 206, 234:238,
241, 256:258, 264:271, 272, 274, 282:284, 286)
fuzzy_matches <- missing_fuzzy_join %>%
filter(!is.na(NAME)) %>%
#filter(inst_name != NAME) %>%
slice(slice_list)
#final lists----
all_matches <- rbind(joined_matches, fuzzy_matches)
final_missing <- anti_join(missing_fuzzy_join,
fuzzy_matches, by = "inst_name") %>%
#filter(!is.na(NAME)) %>%
#filter(inst_name != NAME) %>%
#slice(-slice_list) %>%
select(inst_name) %>% distinct() %>%
anti_join(., all_matches, by = "inst_name")
write_csv(final_missing,
paste0("output/missing_inst_", Sys.Date(), ".csv"))
write_csv(all_matches,
paste0("output/carnegie_inst_matches_", Sys.Date(), ".csv"))
write_csv(clean_surv_inst,
paste0("output/cleaned_survey_inst_", Sys.Date(), ".csv"))
source("~/Desktop/wrangle_carnegie_lists/code/get_wrangle_uni_functions.R")
clean_surv_inst <- clean_surv_inst %>%
mutate(inst_name = map(inst_name, replace_uny),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_abbrv),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_campus),
inst_name = unlist(inst_name),
inst_name = str_to_title(inst_name),
inst_name = str_squish(inst_name)
)
inst_join <- inst_name_list %>%
left_join(clean_surv_inst, .,
by = c("inst_name" = "NAME"), keep = TRUE) %>%
select(-id, -inst_type) %>% #option to keep or drop identifying data
distinct()
#identify respondent inst that did not join/exactly match Carnegie names
joined_na_inst <- inst_join %>%
filter(is.na(NAME)) %>%
select(inst_name) %>% distinct()
#identify respondent inst that DID join/exactly match Carnegie names
joined_matches <- inst_join %>%
filter(inst_name == NAME) %>%
distinct()
#fuzzy join----
missing_fuzzy_join <- joined_na_inst %>%
mutate(inst_name = map(inst_name, replace_uny),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_abbrv),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_campus),
inst_name = unlist(inst_name),
inst_name = map(inst_name, fix_inst_name),
inst_name = unlist(inst_name),
inst_name = str_squish(inst_name),
) %>% #another attempt to repair names
stringdist_left_join(., inst_name_list,
by = c("inst_name" = "NAME"),
method = "lcs", max_dist = 6
) %>% #use fuzzy join to catch potential mis-spellings, campuses, etc.
distinct()
fuzzy_matches <- missing_fuzzy_join %>%
filter(!is.na(NAME))
View(fuzzy_matches)
#list of correct matches from fuzzy join
slice_list <- c(4, 10:13, 70, 75:79, 81, 87, 88,
99:124, 126, 127, 129:136, 139, 140,
142, 144, 155, 157:159, 171, 172,
174:177, 180, 181, 183:185, 195,
196, 202, 214, 230:235, 238, 253, 254,
260:269, 277:279, 281)
fuzzy_matches <- missing_fuzzy_join %>%
filter(!is.na(NAME)) %>%
#filter(inst_name != NAME) %>%
slice(slice_list)
all_matches <- rbind(joined_matches, fuzzy_matches)
final_missing <- anti_join(missing_fuzzy_join,
fuzzy_matches, by = "inst_name") %>%
#filter(!is.na(NAME)) %>%
#filter(inst_name != NAME) %>%
#slice(-slice_list) %>%
select(inst_name) %>% distinct() %>%
anti_join(., all_matches, by = "inst_name")
write_csv(final_missing,
paste0("output/missing_inst_", Sys.Date(), ".csv"))
write_csv(all_matches,
paste0("output/carnegie_inst_matches_", Sys.Date(), ".csv"))
write_csv(clean_surv_inst,
paste0("output/cleaned_survey_inst_", Sys.Date(), ".csv"))
source("~/Desktop/wrangle_carnegie_lists/code/final_survey_inst_match.R")
source("~/Desktop/wrangle_carnegie_lists/code/final_survey_inst_match.R")
source("code/get_regions.R")
#pull in datasets----
#cleaned full Carnegie data set
clean_carn_data <- read_csv("output/cleaned_carnegie_data_2023-03-28.csv") %>%
select(NAME, STABBR, DOCRSDEG, HBCU, HSI, MSI, `S&ER&D`,
SOCSC_RSD, STEM_RSD, LANDGRNT,	MEDICAL,	TRIBAL, WOMENS)
#cleaned list of unique respondent-provided institutions
clean_surv_inst <- read_csv("output/cleaned_survey_inst_2023-04-11.csv")
#data set of unique respondent-provided institutions matched with listed institutions
nr_row <- data.frame(inst_name = "Nr", NAME = "Nr")
all_matches <- read_csv("output/carnegie_inst_matches_2023-04-11.csv") %>%
rows_insert(nr_row)
all_matches <- read_csv("output/carnegie_inst_matches_2023-04-11.csv")
View(all_matches)
#data set of non-carn universities/institutions
non_carn_unis <- read_csv("data/non-carnegie_unis.csv") %>%
select(-inst_prestige) %>%
mutate(Institution = str_to_title(Institution),
Institution = str_remove_all(Institution, "'"),
STABBR = "",
US_region = "",
HBCU = "", HSI = "", MSI = "", `S&ER&D` = "",
SOCSC_RSD = "", STEM_RSD = "", LANDGRNT = "",
MEDICAL = "",	TRIBAL = "", WOMENS = "") %>%
rename(NAME = Institution)
#Merge US region w/ carn data ----
region_carnegie_join <- left_join(clean_carn_data, us_regions,
by = c("STABBR" = "State_abbvr")) %>%
#select(-STABBR) %>%
distinct() %>%
mutate(PUI_RI = if_else(DOCRSDEG >= 21, "RI", "PUI")) %>% #determine ri vs pui status
rename(US_region = Region, State_Providence = State_name) %>%
mutate(Country = "USA",
Other_inst_type = "US college or university") %>%
select(-DOCRSDEG) %>%
rbind(., non_carn_unis) %>%
rowid_to_column(var = "inst_id")
matched_survey_inst <- left_join(clean_surv_inst, all_matches,
by = "inst_name") %>%
#filter(!is.na(NAME)) %>%
left_join(., region_carnegie_join, by = "NAME") %>%
mutate(world_region = map(Country, get_world_region),
world_region = unlist(world_region)) %>%
distinct()
#get unique inst identifiers
all_inst_data <- matched_survey_inst %>%
mutate(inst_id = as.character(inst_id),
inst_id = if_else(is.na(inst_id), "0", inst_id)) %>%
select(-inst_name, -NAME, -STABBR, -State_Providence, -Country)
#save final matched dataset----
write_csv(all_inst_data, paste0("output/final_survey_inst_data_2019-2022_",
Sys.Date(),".csv"))
